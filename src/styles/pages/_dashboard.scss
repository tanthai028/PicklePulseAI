.dashboard {
  padding: 1.5rem;
  padding-bottom: calc(1.5rem + 60px); // Add space for mobile sticky footer

  @include respond-to(lg) {
    padding-bottom: 1.5rem; // Reset on desktop
  }

  &__header {
    margin-bottom: 2rem;
  }

  &__grid {
    display: grid;
    gap: 1.5rem;
    grid-template-columns: 1fr;

    @include respond-to(md) {
      grid-template-columns: repeat(2, 1fr);
    }

    @include respond-to(lg) {
      grid-template-columns: repeat(12, 1fr);
    }
  }

  // Health Stats Module
  &__health-stats {
    grid-column: 1 / -1;

    @include respond-to(lg) {
      grid-column: span 12;
    }

    @include card;
    padding: 1.5rem;

    &-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;

      @include respond-to(lg) {
        grid-template-columns: repeat(4, 1fr);
      }
    }

    &-item {
      text-align: center;
      padding: 1.5rem;
      background: rgba($background-light, 0.5);
      border-radius: $border-radius-md;
      @include transition-base;

      &:hover {
        transform: translateY(-4px);
        box-shadow: $shadow-md;
      }

      h3 {
        color: $text-secondary;
        font-size: 0.875rem;
        margin-bottom: 0.75rem;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
      }

      .value {
        font-size: 2rem;
        font-weight: 700;
        color: $text-primary;
        line-height: 1.2;
      }
    }
  }

  // Skills Board Module
  &__skills-board {
    grid-column: 1 / -1;

    @include respond-to(md) {
      grid-column: span 1;
    }

    @include respond-to(lg) {
      grid-column: span 8;
    }

    @include card;
    padding: 1.5rem;
    
    &-columns {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: 1.5rem;

      @include respond-to(md) {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
      }
    }

    &-column {
      background: rgba($background-light, 0.5);
      padding: 1rem;
      border-radius: $border-radius-sm;
      display: flex;
      flex-direction: column;

      h3 {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 0.75rem;
        color: $text-primary;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid rgba($primary-color, 0.1);
      }
    }

    &-items {
      display: flex;
      flex-direction: column;
      gap: 0.75rem;

      // Center the add button when section is empty
      &:empty + .dashboard__skills-board-add {
        margin-top: 1rem;
      }
    }

    &-item {
      background: $white;
      padding: 1rem;
      border-radius: $border-radius-sm;
      box-shadow: $shadow-sm;
      cursor: pointer;
      width: 100%;
      text-align: left;
      border: 1px solid transparent;
      transform: translateZ(0);
      transition: all 0.2s ease-in-out;

      &:hover {
        border-color: $primary-color;
        background: rgba($primary-color, 0.05);
        transform: scale(1.02);
      }

      &:active {
        transform: scale(0.98);
      }
    }

    &-add {
      width: 100%;
      height: 48px !important;
      border: 2px dashed rgba($text-secondary, 0.2) !important;
      background: transparent !important;
      transition: all 0.2s ease-in-out !important;
      margin-top: 0.75rem; // Same as the gap between items

      &:hover {
        border-color: $primary-color !important;
        background: rgba($primary-color, 0.05) !important;
      }

      svg {
        transition: transform 0.2s ease-in-out;
      }

      &:hover svg {
        transform: scale(1.2);
      }

      &:active svg {
        transform: scale(0.9);
      }
    }
  }

  // Performance Log Module
  &__performance-log {
    grid-column: 1 / -1;

    @include respond-to(lg) {
      grid-column: span 12;
    }

    @include card;
    padding: 1.5rem;
    overflow-x: auto;

    table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;

      th, td {
        padding: 1rem;
        text-align: left;
      }

      th {
        font-weight: 600;
        color: $text-primary;
        position: sticky;
        top: 0;
        background: $white;
        z-index: 1;
        
        &::after {
          content: '';
          position: absolute;
          bottom: 0;
          left: 0;
          width: 0;
          height: 2px;
          background-color: $primary-color;
          transition: width 0.3s ease;
        }

        &:hover::after {
          width: 100%;
        }
      }

      td {
        color: $text-secondary;
        border-bottom: 1px solid rgba($text-secondary, 0.1);
      }

      tr {
        @include transition-base;

        &:hover td {
          background-color: rgba($primary-color, 0.02);
        }
      }
    }
  }
}

// Mobile Check-in Footer
.mobile-check-in {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: $white;
  padding: 0.75rem 1rem;
  box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
  z-index: 100;
  display: flex;
  justify-content: center;

  @include respond-to(lg) {
    display: none;
  }

  button {
    width: 100%;
    max-width: 400px;
    height: 48px;
    border-radius: $border-radius-md;
    background: $primary-color;
    color: $white;
    font-weight: 600;
    @include transition-base;

    &:hover {
      background: darken($primary-color, 5%);
    }
  }
}

// Check-in Modal
.check-in-modal {
  &__content {
    padding: 1.5rem;
    padding-bottom: calc(1.5rem + 80px); // Space for sticky button
  }

  &__footer {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    padding: 1.5rem;
    background: $white;
    border-top: 1px solid rgba($text-secondary, 0.1);
    display: flex;
    justify-content: center;
    border-radius: 0 0 $border-radius-md $border-radius-md;

    button {
      width: 100%;
      height: 52px;
    }
  }
}

// Success Animation
.success-checkmark {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
  font-size: 4rem;
  color: $success-color;
  opacity: 0;
  filter: blur(10px);
  animation: successPop 1s ease-out forwards;
}

@keyframes successPop {
  0% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(0.5);
    filter: blur(10px);
  }
  50% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.2);
    filter: blur(0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(1);
    filter: blur(5px);
  }
} 